<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.livarter.app.mapper.MemberMapper">

    <insert id="saveMember" parameterType="com.livarter.app.domain.Member" >
        INSERT INTO member ( id
                           , email
                           , nickname
                           , role
                           , grade
        )
        VALUES ( member_id_seq.nextval
               , #{email}
               , #{nickname}
               , #{role, typeHandler=com.livarter.app.config.DatabaseEnumTypeHandler}
               , #{grade, typeHandler=com.livarter.app.config.DatabaseEnumTypeHandler}
               )
    </insert>

    <select id="findById" resultType="com.livarter.app.domain.Member" >
        SELECT   id AS id
               , email AS email
               , nickname AS nickname
               , role AS role
               , image AS image
               , refresh_token AS refreshToken
               , grade AS grade
               , name AS name
               , address AS address
               , zip_code AS zipCode
               , birth_date AS birthDate
               , cur_point AS curPoint
               , total_point AS totalPoint
               , created_at AS createdAt
               , updated_at AS updatedAt
        FROM   MEMBER
        WHERE  id = #{id}
    </select>

    <select id="findByEmail" resultType="com.livarter.app.domain.Member" >
        SELECT id AS id
             , email AS email
             , nickname AS nickname
             , role AS role
             , image AS image
             , refresh_token AS refreshToken
             , grade AS grade
             , name AS name
             , address AS address
             , zip_code AS zipCode
             , birth_date AS birthDate
             , cur_point AS curPoint
             , total_point AS totalPoint
             , created_at AS createdAt
             , updated_at AS updatedAt
        FROM   MEMBER
        WHERE  email = #{email}
    </select>

    <update id="updateRefreshToken" parameterType="com.livarter.app.domain.Member">
        UPDATE MEMBER
        SET refresh_token = #{refreshToken}
        WHERE id = #{id}
    </update>

    <update id="updateMember" parameterType="com.livarter.app.dto.MemberUpdateReqDto">
        UPDATE MEMBER
        <set>
            <if test="reqDto.email != null">email=#{reqDto.email}</if>
            <if test="reqDto.nickname != null">, nickname=#{reqDto.nickname}</if>
            <if test="reqDto.image != null">, image=#{reqDto.image}</if>
            <if test="reqDto.grade != null">, grade=#{reqDto.grade}</if>
            <if test="reqDto.name != null">, name=#{reqDto.name}</if>
            <if test="reqDto.address != null">, address=#{reqDto.address}</if>
            <if test="reqDto.zipCode != null">, zip_code=#{reqDto.zipCode}</if>
            <if test="reqDto.birthDate != null">, birth_date=TO_DATE(#{reqDto.birthDate}, 'YYYY-MM-DD')</if>
        </set>
        WHERE id = #{reqDto.id}
    </update>

    <select id="getMemberGradeInfo">
        SELECT
            member.cur_point AS curPoint,
            member.total_point AS totalPoint,
            membership.name AS name,
            membership.image AS image
        FROM member
        JOIN membership
        ON member.grade = membership.name
        WHERE member.id = #{memberId}
    </select>

    <update id="increasePoint">
        UPDATE member
        SET cur_point = cur_point + #{point}
        WHERE id = #{memberId}
    </update>

    <update id="decreasePoint">
        UPDATE member
        SET cur_point = cur_point - #{point}
        WHERE id = #{memberId}
    </update>
</mapper>